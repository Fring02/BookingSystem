// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20210410075815_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Domain.Models.Booking.BookingRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("BookingTime")
                        .HasColumnType("interval");

                    b.Property<DateTime>("LeftAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("BookingRequests");
                });

            modelBuilder.Entity("Domain.Models.Booking.LeisureService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.Property<string>("WorkingTime")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LeisureServices");
                });

            modelBuilder.Entity("Domain.Models.Booking.ServiceImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LeisureServiceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LeisureServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServicesImages");
                });

            modelBuilder.Entity("Domain.Models.Booking.BookingRequest", b =>
                {
                    b.HasOne("Domain.Models.Booking.LeisureService", "Service")
                        .WithMany("BookingRequests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Domain.Models.Booking.ServiceImage", b =>
                {
                    b.HasOne("Domain.Models.Booking.LeisureService", null)
                        .WithMany("Images")
                        .HasForeignKey("LeisureServiceId");

                    b.HasOne("Domain.Models.Booking.LeisureService", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Domain.Models.Booking.LeisureService", b =>
                {
                    b.Navigation("BookingRequests");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
